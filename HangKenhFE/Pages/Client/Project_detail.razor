@page "/project-detail/{id:long}"
@inject IBannerServices bnser
@inject ICategoriesServices sevcate
@inject IPostSer sev
@inject IJSRuntime JS
@inject NavigationManager nav
<section class="section-banner">
    <img src="@banner.Meta_data" class="w-100 h-100" alt="banner-image-3">
    <div class="title-banner">
        <h1>
            @banner.Name
        </h1>
    </div>
</section>

<section id="project_detail">
    <div class="container">
        <header class="pc">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/"> Trang chủ</a></li>
                    <li class="breadcrumb-item active" aria-current="page">
                        <a href="/project">Dự án / công trình</a>
                    </li>
                    <li class="breadcrumb-item active" aria-current="page">@posts_project.Title</li>
                </ol>
            </nav>
            <div class="row">
                <div class="col-12">
                    <h2 class="category-font-header">@banner.Name</h2>
                </div>
            </div>
        </header>
        <div class="title-underline phone"></div>

        <main>
            <article>
                <div class="big-image" style="height: 1098px">
                    <img src="@posts_project.Feature_image" class="w-100 h-100 object-fit-cover"
                         alt="@posts_project.Title">
                </div>
                <div class="project-detail-article">
                    <div class="project-article-content">
                        <div class="project-article-title">
                            <p>@posts_project.Title</p>
                        </div>
                        <div class="project-article-author">
                            <p>Project by @abc</p>                          
                        </div>
                    </div>
                    <div class="project-detail-article-content">
                        @GetCleanText(posts_project.Description)
                    </div>
                    <a href="/contact">
                        <button class="project-article-contract">
                            Nhận tư vấn
                            <img src="main/assets/images/project/detail/vector.svg" alt="contract">
                        </button>
                    </a>

                </div>
                <div class="project-detail-image">
                    @if (!string.IsNullOrEmpty(posts_project.Image_library))
                    {
                        var imageUrls = posts_project.Image_library.Split(','); // Phân tách chuỗi URL thành mảng
                        var groupedImages = imageUrls.Select((url, index) => new { url, index }) // Đánh chỉ số
                        .GroupBy(x => x.index / 2)                  // Nhóm 2 ảnh một nhóm
                        .ToList();

                        foreach (var group in groupedImages)
                        {
                            <div class="project-detail-image-inner @(group.Key % 2 != 0 ? "flex-row-reverse" : "")">
                                @foreach (var image in group)
                                {
                                    <div>
                                        <img src="@image.url" alt="Project Image" class="w-100 h-100 object-fit-cover" />
                                    </div>
                                }
                            </div>
                        }
                    }
                    else
                    {
                        <p>Không có hình ảnh nào để hiển thị.</p>
                    }
                </div>

            </article>
            <div class="discover mt-80px">
                <div class="section-box">
                    <div class="sub-title">
                        Discover Our
                    </div>
                    <h3 class="title">Bestselling Rugs</h3>
                    <div class="decoration mt-80px mb-80px">
                        <div></div>
                    </div>
                </div>
                <div class="row pc">
                    @* @if($products->isNotEmpty())
                    @foreach($products as $product)
                    <div class="col-3 product">
                    @include('frontend.shortcodes.product_item', [
                    'product' => $product
                    ])
                    </div>
                    @endforeach
                    @endif *@
                </div>
                <div class="phone product-list-phone slider">
                    @*   @if($products->isNotEmpty())
                    @foreach($products as $product)
                    <article>
                    @include('frontend.shortcodes.product_item', [
                    'product' => $product
                    ])
                    </article>
                    @endforeach
                    @endif *@
                </div>
            </div>
        </main>
    </div>
</section>


@code {
    [Parameter]
    public long Id { get; set; }
    private Product_Posts posts_project = new Product_Posts();
    private List<Product_Posts> list_post = new List<Product_Posts>();
    private Banner banner = new Banner();
    private string abc = "";
    protected async override Task OnInitializedAsync()
    {
        posts_project = await sev.GetByIdType(Id, "project");
        abc = await sev.GetNameDesigner(posts_project.AuthorId??0);
        banner = await bnser.GetBannerByProductPostId(Id);
        list_post = await sev.GetCountByType("post", Id);
    }

    private string GetFirstImageUrl(string imageUrls)
    {
        if (string.IsNullOrEmpty(imageUrls))
        {
            return string.Empty;
        }

        var urls = imageUrls.Split(',');
        return urls.FirstOrDefault() ?? string.Empty;
    }
    private string GetCleanText(string input)
    {
        if (string.IsNullOrEmpty(input))
        {
            return string.Empty;
        }

        // Loại bỏ thẻ HTML
        string textWithoutHtml = System.Text.RegularExpressions.Regex.Replace(input, "<.*?>", string.Empty);

        // Giải mã các ký tự HTML
        return System.Net.WebUtility.HtmlDecode(textWithoutHtml);
    }
}