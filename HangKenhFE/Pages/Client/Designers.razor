@page "/designer"
@using HangKenhFE.Models
@inject NavigationManager nav
@inject IDesignerServices sev
@inject IJSRuntime JS

<section class="section-banner">
    <img src="main/assets/images/banner-category.jpg" class="w-100 h-100" alt="banner-image-3">
    <div class="title-banner">
        <h1>
            Nhà thiết kế
        </h1>
    </div>
</section>
<div class="container mt-5">
    <div class="row">
        <aside class="col-md-3">
            <div class="card border-0">
                <div class="input-search">
                    <input class="form-control search"
                           type="text"
                           placeholder="Tìm kiếm..."
                           @bind="search_query"
                           @oninput="OnSearch" />               
                    <button style="text-align:center" class="btn-search">
                        <img src="main/assets/images/search.svg">
                    </button>
                </div>
            </div>
        </aside>
        <main class="col-md-9">
            <header class="content-header">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/"> Trang chủ</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Nhà thiết kế</li>
                    </ol>
                </nav>
                <div class="row">
                    <div class="col-8">
                        <h2 class="category-font-header">NHÀ THIẾT KẾ</h2>
                    </div>
                  @*   <div class="col-4 filter-basic">
                        <label>Hiển thị</label>
                        <img src="main/assets/images/candle.svg"
                             class="candle" alt="candle">
                        <img src="main/assets/images/category.svg"
                             class="category" alt="category">
                    </div> *@
                </div>
            </header>
            <div class="row mt-48px">
                @foreach (var designer in ListDesigners)
                {
                    <div class="col-4" style="margin-bottom: 48px;">
                        <figure class="designer-card border-0">
                            <div class="designer-avatar">
                                @if (!string.IsNullOrEmpty(designer.image))
                                {
                                    <a @onclick="() => NavDetails(designer.id_Designer)">
                                        <img src="@designer.image"
                                             width="312" height="318"
                                             alt="@(!string.IsNullOrEmpty(designer.ShortName) ? designer.ShortName : designer.Name)">
                                    </a>
                                }
                            </div>
                            <figcaption class="designer-info text-center">
                                <a @onclick="() => NavDetails(designer.id_Designer)"
                                   class="designer-name">
                                    @(designer.ShortName ?? designer.Name)
                                </a>
                            </figcaption>
                        </figure>
                    </div>
                }
            </div>   
             <Pagination TItem="Files" PageNumber="page_number" TotalPages="total_pages" PageSize="page_size" TotalItems="totalItems" OnPageChanged="GoToPage" OnPageSizeChanged="OnPageSizeChanged" />     
         </main>
    </div>
</div>
@code {
    private List<Designer> ListDesigners = new List<Designer>();
    private string search_query = string.Empty;
    private int page_number = 1;
    private int total_pages = 1;
    private int page_size = 9;
    private int totalItems;

    protected override async Task OnInitializedAsync()
    {
        await LoadPosts();
    }
    private async Task GoToPage(int page)
    {
        page_number = page;
        await LoadPosts();
    }

    private async Task LoadPosts()
    {
        string searchTerm = string.IsNullOrEmpty(search_query) ? "" : search_query;
        ListDesigners = await sev.GetByTypeAsyncClient(page_number, page_size, searchTerm);
        totalItems = await sev.GetTotalCountAsyncClient(searchTerm);
        total_pages = (int)Math.Ceiling((double)totalItems / page_size);
    }

    private async Task OnPageSizeChanged(int newPageSize)
    {
        page_size = newPageSize;
        page_number = 1;
        await LoadPosts();
    }
    private async Task OnSearch(ChangeEventArgs e)
    {
        page_number = 1; // Đặt lại trang đầu tiên khi tìm kiếm
        search_query = e.Value?.ToString() ?? string.Empty;
        await LoadPosts();
    }

    private void NavDetails(long id)
    {
        nav.NavigateTo($"/designer-detail/{id}");
    }
}