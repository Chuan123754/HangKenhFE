@page "/blogs"
@inject NavigationManager nav
@inject IPostSer sev
@inject ICategoriesServices cate
@inject IDesignerServices desi
@inject IJSRuntime JS
<section class="section-banner">
    <img src="main/assets/images/banner-category.jpg"
         class="w-100 h-100" alt="banner-image-3">
    <div class="title-banner">
        <h1>
            Article
        </h1>
    </div>
</section>
<section id="trending">
    <div class="container">
        <div class="row">
            <aside class="col-md-3">
                <div class="card border-0 accordion" id="accordion_filter">
                    <div class="input-search">
                        <input class="form-control search"
                               type="text"
                               placeholder="Tìm kiếm..."
                               @bind="search_query"
                               @oninput="OnSearch" />
                        <button style="text-align:center" class="btn-search">
                            <img src="main/assets/images/search.svg">
                        </button>
                    </div>
                    <div class="filter-group">
                        <header class="accordion-header" id="panelsStayOpen-headingOne">
                            <button class="accordion-button filter-product-title collapsed" type="button"
                                    data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseOne"
                                    aria-expanded="false" aria-controls="panelsStayOpen-collapseOne">
                                DANH MỤC SẢN PHẨM
                            </button>
                        </header>
                        <div class="filter-content collapse accordion-collapse" id="panelsStayOpen-collapseOne"
                             aria-labelledby="panelsStayOpen-headingOne">
                            <div class="card-body accordion-body">
                                <div class="row">
                                    @foreach (var item in categoriesList)
                                    {
                                        <div class="bg-element-filter bg-element-filter-image @(SelectedCategories.Contains(item.Id) ? "active" : "")"
                                             style="display: flex; gap: 8px; cursor: pointer;"
                                             @onclick="() => OnCategorySelected(item.Id)">
                                            <span style="line-height: 20px; font-size: 14px; text-align: center">@item.Title</span>
                                        </div>
                                    }

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </aside>
            <main class="col-md-9">
                <header>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="/"> Trang chủ</a></li>
                            <li class="breadcrumb-item active" aria-current="page">Blogs</li>
                        </ol>
                    </nav>
                    <div class="row">
                        <div class="col-12">
                            <h2 class="category-font-header">Cẩm nang</h2>
                        </div>
                    </div>
                </header>
                @{
                    var postsToShow = Posts_list.Take(3).ToList();
                }

                @if (postsToShow.Any())
                {

                    <div class="row mt-48px">
                        <div class="col-6">
                            <a @onclick="() => NavDetails(postsToShow[0].Id)" class="w-100">
                                <div class="post-image">
                                    <div class="post-date-tag">
                                        @postsToShow[0].Created_at?.ToString("dd/MM/yyyy HH:mm:ss")
                                    </div>
                                    <img class="w-100" src="@postsToShow[0].Feature_image" alt="" height="1040px">
                                </div>
                            </a>
                            <div class="post-intro">
                                <div class="post-category">
                                    <span></span>
                                    @postsToShow[0].Post_categories.FirstOrDefault()?.Categories.Title
                                </div>
                                <a @onclick="() => NavDetails(postsToShow[0].Id)" class="w-100">
                                    <div class="post-big-title">@postsToShow[0].Title</div>
                                </a>
                                <div class="post-big-desc">
                                    @GetCleanText(postsToShow[0].Description)
                                </div>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="d-grid">
                                @foreach (var post in postsToShow.Skip(1))
                                {
                                    <div class="col mt-24px">
                                        <a @onclick="() => NavDetails(post.Id)" class="w-100">
                                            <div class="post-image">
                                                <div class="post-date-tag">
                                                    @post.Created_at?.ToString("dd/MM/yyyy HH:mm:ss")
                                                </div>
                                                <img class="w-100 " src="@post.Feature_image" height="512px" alt="">
                                            </div>
                                        </a>
                                        <div class="post-intro">
                                            <div class="post-category">
                                                <span></span>
                                                <span>@post.Post_categories.FirstOrDefault()?.Categories.Title</span>
                                            </div>
                                            <a @onclick="() => NavDetails(post.Id)" class="w-100">
                                                <div class="post-title">@post.Title</div>
                                            </a>
                                            <div class="post-big-desc">
                                                @GetCleanText(post.Description)
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }

                <div class="row">
                    @foreach (var postlist in Posts_list.Skip(3))
                    {
                        <div class="col-6 mt-48px">
                            <a @onclick="() => NavDetails(postlist.Id)" class="w-100">
                                <div class="post-image">
                                    <div class="post-date-tag">
                                        @postlist.Created_at?.ToString("dd/MM/yyyy HH:mm:ss")
                                  
                                    </div>

                                    <img class="w-100" style="height: 471px" src="@postlist.Feature_image" alt="">

                                </div>
                            </a>
                            <div class="post-intro">
                                <div class="post-category">
                                    <span></span>
                                    <span>@postlist.Post_categories.FirstOrDefault()?.Categories?.Title</span>
                                </div>
                                <a @onclick="() => NavDetails(postlist.Id)" class="w-100">
                                    <div class="post-title">@postlist.Title</div>
                                </a>
                                <div class="post-desc mb-4">
                                    @postlist.Short_description
                                </div>
                            </div>

                        </div>
                    }
                </div>
                <nav class="mt-48px">
                    <Pagination TItem="Files" PageNumber="page_number" TotalPages="total_pages" PageSize="page_size" TotalItems="totalItems" OnPageChanged="GoToPage" OnPageSizeChanged="OnPageSizeChanged" />
                </nav>
            </main>
        </div>
    </div>
</section>
@code {
    private List<Product_Posts> Posts_list = new();
    private List<Designer> designersList = new List<Designer>();
    private List<Categories> categoriesList = new List<Categories>();
    private List<long?> SelectedCategories = new List<long?>();
    private List<long?> SelectedDesigner = new List<long?>();
    private string search_query = string.Empty;
    private int page_number = 1;
    private int total_pages = 1;
    private int page_size = 9;
    private int totalItems;

    protected override async Task OnInitializedAsync()
    {
        await LoadPosts();
    }

    private async Task GoToPage(int page)
    {
        page_number = page;
        await LoadPosts();
    }

    private async Task OnPageSizeChanged(int newPageSize)
    {
        page_size = newPageSize;
        page_number = 1;
        await LoadPosts();
    }
    private async Task LoadPosts()
    {
        string searchTerm = string.IsNullOrEmpty(search_query) ? "" : search_query;
        Posts_list = await sev.GetByTypeAsyncFilter2("post", SelectedDesigner, SelectedCategories, page_number, page_size, searchTerm);
        totalItems = await sev.GetTotalCountAsyncFilter2("post", SelectedDesigner, SelectedCategories, searchTerm);
        total_pages = (int)Math.Ceiling((double)totalItems / page_size);
        categoriesList = await cate.GetAllType("post");
        designersList = await desi.GetAll();
        StateHasChanged();
    }
    private async Task OnDesignerSelected(long? designerId)
    {
        if (SelectedDesigner.Contains(designerId))
        {
            SelectedDesigner.Remove(designerId);
        }
        else
        {
            SelectedDesigner.Add(designerId);
        }

        await LoadPosts(); // Load lại danh sách sản phẩm
        StateHasChanged(); // Cập nhật lại giao diện
    }
    private async Task OnCategorySelected(long? categoryId)
    {
        if (SelectedCategories.Contains(categoryId))
        {
            SelectedCategories.Remove(categoryId);
        }
        else
        {
            SelectedCategories.Add(categoryId);
        }

        await LoadPosts(); // Load lại danh sách sản phẩm
        StateHasChanged(); // Cập nhật lại giao diện
    }
    private async Task OnSearch(ChangeEventArgs e)
    {
        page_number = 1; // Đặt lại trang đầu tiên khi tìm kiếm
        search_query = e.Value?.ToString() ?? string.Empty;
        await LoadPosts();
    }
    private void NavDetails(long id)
    {
        nav.NavigateTo($"/blogs-details/{id}");
    }
    private string GetCleanText(string input)
    {
        if (string.IsNullOrEmpty(input))
        {
            return string.Empty;
        }

        // Loại bỏ thẻ HTML
        string textWithoutHtml = System.Text.RegularExpressions.Regex.Replace(input, "<.*?>", string.Empty);

        // Giải mã các ký tự HTML
        return System.Net.WebUtility.HtmlDecode(textWithoutHtml);
    }
}

<style>
    .bg-element-filter {
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 10px;
        transition: all 0.3s ease;
    }

        .bg-element-filter.active {
            border: 1px solid #007bff;
            background-color: #e7f1ff;
        }
</style>