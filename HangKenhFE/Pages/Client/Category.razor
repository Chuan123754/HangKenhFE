@page "/category"
@inject NavigationManager nav
@inject IPostSer sev
@inject ICategoriesServices cate
@inject IDesignerServices desi
@inject IColorServices colo
@inject IMaterialServices mate
@inject IStyleServices sty
@inject ISizeServices sizeS
@inject ITextile_technologyServices textte
@inject IJSRuntime JS
<section class="section-banner">
    <img src="main/assets/images/banner-category.jpg"
         class="w-100 h-100" alt="banner-image-3">
    <div class="title-banner">
        <h1>
            Sản phẩm
        </h1>
    </div>
</section>

<section>
    <div class="container">
        <div class="row">
            <aside class="col-xl-3 col-sm-12 sidebar-filter" id="sidebar-filter-category">
                <div class="card border-0 accordion" id="accordion_filter">
                    <div class="input-search">
                        <input class="form-control search"
                               type="text"
                               placeholder="Tìm kiếm..."
                               @bind="search_query"
                               @oninput="OnSearch" />
                        <button style="text-align:center" class="btn-search">
                            <img src="main/assets/images/search.svg">
                        </button>
                    </div>
                    <div class="sidebar-filter-header">
                        <div class="sidebar-filter-title">Bộ lọc sản phẩm</div>
                        <div>
                            <a onclick="showSidebar('sidebar-filter-category')">
                                <svg xmlns="http://www.w3.org/2000/svg" width="36" height="37" viewBox="0 0 36 37" fill="none">
                                    <path d="M13.7549 22.7459L22.2449 14.2559" stroke="#292D32" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                                    <path d="M22.2449 22.7459L13.7549 14.2559" stroke="#292D32" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                                </svg>
                            </a>
                        </div>
                    </div>
                    <div class="filter-group">
                        <header class="accordion-header" id="panelsStayOpen-headingSeven">
                            <button class="accordion-button filter-product-title collapsed" type="button"
                                    data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseSeven"
                                    aria-expanded="false" aria-controls="panelsStayOpen-collapseSeven">
                                KÍCH THƯỚC
                            </button>
                        </header>
                        <div class="filter-content collapse accordion-collapse" id="panelsStayOpen-collapseSeven"
                             aria-labelledby="panelsStayOpen-headingSeven">
                            <div class="card-body accordion-body">
                                <div class="row">
                                    @foreach (var item in sizesList)
                                    {
                                        <div class="bg-element-filter bg-element-filter-image @(SelectedSize.Contains(item.Id) ? "active" : "")"
                                             style="display: flex; gap: 8px; cursor: pointer;"
                                             @onclick="() => OnSizeSelected(item.Id)">
                                            <span style="line-height: 20px; font-size: 14px; text-align: center">@item.Title</span>
                                        </div>
                                    }

                                </div>
                            </div>
                        </div>
                    </div>
                
                    <div class="filter-group">
                        <header class="accordion-header" id="panelsStayOpen-headingTwo">
                            <button class="accordion-button filter-product-title collapsed" type="button"
                                    data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseTwo"
                                    aria-expanded="false" aria-controls="panelsStayOpen-collapseTwo">
                                MÀU SẮC
                            </button>
                        </header>
                        <div class="filter-content collapse accordion-collapse" id="panelsStayOpen-collapseTwo"
                             aria-labelledby="panelsStayOpen-headingTwo">
                            <div class="card-body accordion-body">
                                <div class="row">
                                    @foreach (var item in colorsList)
                                    {                                     
                                        <div class="bg-element-filter bg-element-filter-image @(SelectedColor.Contains(item.Id) ? "active" : "")"
                                             style="display: flex; gap: 8px; cursor: pointer;"
                                             @onclick="() => OnColorSelected(item.Id)">
                                            <div class="color-preview"
                                                 style="width: 24px; height: 24px; background-color: @item.Color_code; border-radius: 50%; border: 1px solid #ddd;">
                                            </div>
                                            <span style="line-height: 24px; font-size: 14px; text-align: center">@item.Title</span>
                                        </div>
                                    }

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="filter-group">
                        <header class="accordion-header" id="panelsStayOpen-headingThree">
                            <button class="accordion-button filter-product-title collapsed" type="button"
                                    data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseThree"
                                    aria-expanded="false" aria-controls="panelsStayOpen-collapseThree">
                                CÔNG NGHỆ DỆT
                            </button>
                        </header>
                        <div class="filter-content collapse accordion-collapse" id="panelsStayOpen-collapseThree">
                            <div class="card-body accordion-body">
                                <div class="row">
                                    @foreach (var item in textile_TechnologiesList)
                                    {
                                        <div class="bg-element-filter bg-element-filter-image @(SelectedTextile.Contains(item.Id) ? "active" : "")"
                                             style="display: flex; gap: 8px; cursor: pointer;"
                                             @onclick="() => OnTextile_TechnologiesSelected(item.Id)">                                       
                                            <span style="line-height: 20px; font-size: 14px; text-align: center">@item.Title</span>
                                        </div>                               
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="filter-group">
                        <header class="accordion-header" id="panelsStayOpen-headingFour">
                            <button class="accordion-button filter-product-title collapsed" type="button"
                                    data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseFour"
                                    aria-expanded="false" aria-controls="panelsStayOpen-collapseFour">
                                CHẤT LIỆU
                            </button>
                        </header>
                        <div class="filter-content collapse accordion-collapse" id="panelsStayOpen-collapseFour"
                             aria-labelledby="panelsStayOpen-headingFour">
                            <div class="card-body accordion-body">
                                <div class="row">
                                    @foreach (var item in materialsList)
                                    {
                                        <div class="bg-element-filter bg-element-filter-image @(SelectedMaterial.Contains(item.Id) ? "active" : "")"
                                             style="display: flex; gap: 8px; cursor: pointer;"
                                             @onclick="() => OnMaterialSelected(item.Id)">
                                            <span style="line-height: 20px; font-size: 14px; text-align: center">@item.Title</span>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="filter-group">
                        <header class="accordion-header" id="panelsStayOpen-headingFive">
                            <button class="accordion-button filter-product-title collapsed" type="button"
                                    data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseFive"
                                    aria-expanded="false" aria-controls="panelsStayOpen-collapseFive">
                                PHONG CÁCH
                            </button>
                        </header>
                        <div class="filter-content collapse accordion-collapse" id="panelsStayOpen-collapseFive"
                             aria-labelledby="panelsStayOpen-headingFive">
                            <div class="card-body accordion-body">
                                <div class="row">
                                    @foreach (var item in stylesList.Take(15).ToList())
                                    {
                                        <div class="bg-element-filter bg-element-filter-image @(SelectedStyle.Contains(item.Id) ? "active" : "")"
                                             style="display: flex; gap: 8px; cursor: pointer;"
                                             @onclick="() => OnStyleSelected(item.Id)">
                                            <span style="line-height: 20px; font-size: 14px; text-align: center">@item.Title</span>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="filter-group">
                        <header class="accordion-header" id="panelsStayOpen-headingSix">
                            <button class="accordion-button filter-product-title collapsed" type="button"
                                    data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseSix"
                                    aria-expanded="false" aria-controls="panelsStayOpen-collapseSix">
                                NHÀ THIẾT KẾ
                            </button>
                        </header>
                        <div class="filter-content collapse accordion-collapse" id="panelsStayOpen-collapseSix"
                             aria-labelledby="panelsStayOpen-headingSix">
                            <div class="card-body accordion-body">
                                <div class="row">
                                    @foreach (var item in designersList.Take(15).ToList())
                                    {
                                        <div class="bg-element-filter bg-element-filter-image @(SelectedDesigner.Contains(item.id_Designer) ? "active" : "")"
                                             style="display: flex; gap: 8px; cursor: pointer;"
                                             @onclick="() => OnDesignerSelected(item.id_Designer)">
                                            <span style="line-height: 20px; font-size: 14px; text-align: center">@item.Name</span>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="filter-group">
                        <header class="accordion-header" id="panelsStayOpen-headingOne">
                            <button class="accordion-button filter-product-title collapsed" type="button"
                                    data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseOne"
                                    aria-expanded="false" aria-controls="panelsStayOpen-collapseOne">
                               DANH MỤC SẢN PHẨM
                            </button>
                        </header>
                        <div class="filter-content collapse accordion-collapse" id="panelsStayOpen-collapseOne"
                             aria-labelledby="panelsStayOpen-headingOne">
                            <div class="card-body accordion-body">
                                <div class="row">
                                    @foreach (var item in categoriesList)
                                    {
                                        <div class="bg-element-filter bg-element-filter-image @(SelectedCategories.Contains(item.Id) ? "active" : "")"
                                             style="display: flex; gap: 8px; cursor: pointer;"
                                             @onclick="() => OnCategorySelected(item.Id)">
                                            <span style="line-height: 20px; font-size: 14px; text-align: center">@item.Title</span>
                                        </div>
                                    }
                                 
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </aside>
            <main class="col-xl-9 col-md-9 col-sm-12">
                <header class="content-header">
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="/"> Trang chủ</a></li>
                            <li class="breadcrumb-item active" aria-current="page">Sản phẩm</li>
                        </ol>
                    </nav>
                    <div class="row">
                        <div class="col-8">
                            <h2 class="category-font-header">Danh sách sản phẩm</h2>
                        </div>                     
                    </div>
                </header>
                <div class="row product mt-48px">
                    @foreach (var ps in product_list)
                    {
                        <div class="col-6 col-xl-4 product">
                            <figure class="card product-card">
                                <div class="product-image">
                                    <a @onclick="() => NavDetails(ps.Id)" class="w-100">
                                        <div class="img-wrap">
                                            <img src="@ps.Posts.Feature_image"
                                                 class="w-100 h-100 object-fit-cover"
                                               style="height:403px !important"  alt="@ps.Posts.Title">
                                        </div>
                                        <div class="img-wrap-hide">
                                            <img src="@GetFirstImageUrl(ps.Posts.Image_library)"
                                                 class="w-100 h-100 object-fit-cover"
                                                 style="height:403px !important" alt="@ps.Posts.Title">
                                        </div>
                                    </a>
                                
                                </div>
                                <figcaption class="product-info">
                                    <a @onclick="() => NavDetails(ps.Id)" class="product-name">@ps.Posts.Title</a>
                                    <div class="product-description">
                                        <span class="description">@ps.Posts.Post_categories.FirstOrDefault()?.Categories?.Title</span>
                                    </div>
                                    <div class="product-price">
                                        @if (ps.MinPrice.HasValue && ps.MaxPrice.HasValue)
                                        {
                                            <div class="product-price">
                                                @string.Format("{0:N0}", ps?.MinPrice).Replace(".", ",") VNĐ -   @string.Format("{0:N0}", ps?.MaxPrice).Replace(".", ",") VNĐ
                                            </div>
                                        }
                                        else
                                        {
                                            <div>Chưa có giá</div>
                                        }
                                    </div>
                                    @*                                     <a onclick="showSidebar('sidebar-filter-category')"
                                class="btn-white btn-contract btn-contract-mobile">
                                <div>Liên hệ</div>
                                </a> *@
                                </figcaption>
                            </figure>
                        </div>

                    }
                </div>
                <nav class="mt-48px">
                    <Pagination TItem="Product_Posts" PageNumber="page_number" TotalPages="total_pages" PageSize="page_size" TotalItems="totalItems" OnPageChanged="GoToPage" OnPageSizeChanged="OnPageSizeChanged" />
                </nav>
            </main>
        </div>
    </div>
</section>
@code {
    private List<Product_variants> product_list = new List<Product_variants>();
    private List<Categories> categoriesList = new List<Categories>();
    private List<Color> colorsList = new List<Color>();
    private List<Material> materialsList = new List<Material>();
    private List<Style> stylesList = new List<Style>();
    private List<Size> sizesList = new List<Size>();
    private List<Textile_technology> textile_TechnologiesList = new List<Textile_technology>();
    private List<Designer> designersList = new List<Designer>();
    private string search_query = string.Empty;
    private int page_number = 1;
    private int total_pages = 1;
    private int page_size = 9;
    private int totalItems;

    private List<long?> SelectedCategories = new List<long?>();
    private List<long?> SelectedColor = new List<long?>();
    private List<long?> SelectedSize = new List<long?>();
    private List<long?> SelectedStyle = new List<long?>();
    private List<long?> SelectedMaterial = new List<long?>();
    private List<long?> SelectedTextile = new List<long?>();
    private List<long?> SelectedDesigner = new List<long?>();
    protected override async Task OnInitializedAsync()
    {
        await LoadPosts();
    }
    private async Task GoToPage(int page)
    {
        page_number = page;
        await LoadPosts();
    }

    private async Task LoadPosts()
    {
        string searchTerm = string.IsNullOrEmpty(search_query) ? "" : search_query;
        product_list = await sev.GetByTypeAsyncFilter(SelectedDesigner, SelectedColor, SelectedMaterial, SelectedTextile, SelectedStyle, SelectedSize, SelectedCategories, page_number, page_size, searchTerm);
        totalItems = await sev.GetTotalCountAsyncFilter(SelectedDesigner, SelectedColor, SelectedMaterial, SelectedTextile, SelectedStyle, SelectedSize, SelectedCategories, searchTerm);
        total_pages = (int)Math.Ceiling((double)totalItems / page_size);


        categoriesList = await cate.GetAllType("product");
        colorsList = await colo.GetAll();
        materialsList = await mate.GetAll();
        stylesList = await sty.GetAll();
        sizesList = await sizeS.GetAll();
        textile_TechnologiesList = await textte.GetAll();
        designersList = await desi.GetAll();
        StateHasChanged();

    }
    private async Task OnSizeSelected(long? sizeId)
    {
        if (SelectedSize.Contains(sizeId))
        {
            SelectedSize.Remove(sizeId);
        }
        else
        {
            SelectedSize.Add(sizeId);
        }

        await LoadPosts(); // Load lại danh sách sản phẩm
        StateHasChanged(); // Cập nhật lại giao diện
    }
    private async Task OnColorSelected(long? colorId)
    {
        if (SelectedColor.Contains(colorId))
        {
            SelectedColor.Remove(colorId);
        }
        else
        {
            SelectedColor.Add(colorId);
        }

        await LoadPosts(); // Load lại danh sách sản phẩm
        StateHasChanged(); // Cập nhật lại giao diện
    }
    private async Task OnTextile_TechnologiesSelected(long? textileId)
    {
        if (SelectedTextile.Contains(textileId))
        {
            SelectedTextile.Remove(textileId);
        }
        else
        {
            SelectedTextile.Add(textileId);
        }

        await LoadPosts(); // Load lại danh sách sản phẩm
        StateHasChanged(); // Cập nhật lại giao diện
    }
    private async Task OnMaterialSelected(long? materialId)
    {
        if (SelectedMaterial.Contains(materialId))
        {
            SelectedMaterial.Remove(materialId);
        }
        else
        {
            SelectedMaterial.Add(materialId);
        }

        await LoadPosts(); // Load lại danh sách sản phẩm
        StateHasChanged(); // Cập nhật lại giao diện
    }
    private async Task OnStyleSelected(long? styleId)
    {
        if (SelectedStyle.Contains(styleId))
        {
            SelectedStyle.Remove(styleId);
        }
        else
        {
            SelectedStyle.Add(styleId);
        }

        await LoadPosts(); // Load lại danh sách sản phẩm
        StateHasChanged(); // Cập nhật lại giao diện
    }
    private async Task OnDesignerSelected(long? designerId)
    {
        if (SelectedDesigner.Contains(designerId))
        {
            SelectedDesigner.Remove(designerId);
        }
        else
        {
            SelectedDesigner.Add(designerId);
        }

        await LoadPosts(); // Load lại danh sách sản phẩm
        StateHasChanged(); // Cập nhật lại giao diện
    }
    private async Task OnCategorySelected(long? categoryId)
    {
        if (SelectedCategories.Contains(categoryId))
        {
            SelectedCategories.Remove(categoryId);
        }
        else
        {
            SelectedCategories.Add(categoryId);
        }

        await LoadPosts(); // Load lại danh sách sản phẩm
        StateHasChanged(); // Cập nhật lại giao diện
    }
    private async Task OnPageSizeChanged(int newPageSize)
    {
        page_size = newPageSize;
        page_number = 1;
        await LoadPosts();
    }
    private async Task OnSearch(ChangeEventArgs e)
    {
        page_number = 1; // Đặt lại trang đầu tiên khi tìm kiếm
        search_query = e.Value?.ToString() ?? string.Empty;
        await LoadPosts();
    }

    private void NavDetails(long id)
    {
        nav.NavigateTo($"/product-detail/{id}");
    }
    private string GetFirstImageUrl(string imageUrls)
    {
        if (string.IsNullOrEmpty(imageUrls))
        {
            return string.Empty;
        }

        var urls = imageUrls.Split(',');
        return urls.FirstOrDefault() ?? string.Empty;
    }
}

<style>
    .bg-element-filter {
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 10px;
        transition: all 0.3s ease;
    }
        .bg-element-filter.active {
            border: 1px solid #007bff;
            background-color: #e7f1ff;
        }
</style>