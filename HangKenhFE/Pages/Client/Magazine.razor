@page "/blogs/{slug}"
@inject IBannerServices bnser
@inject ICategoriesServices sevcate
@inject IPostSer sev
@inject IJSRuntime JS
@inject NavigationManager nav

<section class="section-banner">
    <img src="@banner.Meta_data"
         class="w-100 h-100" alt="banner-image-3">
    <div class="title-banner">
        <h1>
            @banner.Name
        </h1>
    </div>
</section>
<section id="trending_detail">
    <div class="container">
        <div class="row">
            <main class="col-md-12">
                <header>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="/"> Trang chủ</a></li>
                            <li class="breadcrumb-item"><a href="/blogs"> Blogs</a></li>
                            <li class="breadcrumb-item active" aria-current="page">@posts.Title</li>
                        </ol>
                    </nav>
                  
                </header>
                <article class="mt-48px">
                    <header>
                        <div class="post-image">
                            <div class="post-date-tag">
                                @posts.Created_at?.ToString("dd/MM/yyyy HH:mm:ss")
                            </div>
                            <img class="w-100" src="@posts.Feature_image" alt="@posts.Title">
                        </div>
                        <div class="post-intro">
                            <div class="post-category">
                                <span></span>
                                <span>@posts.Post_categories.FirstOrDefault()?.Categories?.Title</span>
                            </div>
                            <div class="post-big-title">@posts.Title</div>                      
                            <div class="post-big">
                                @((MarkupString)posts.Description)
                            </div>
                        </div>
                    </header>
                    <figure class="mt-48px">
                        @if (!string.IsNullOrEmpty(posts.Image_library))
                        {
                            var imageUrls = posts.Image_library.Split(','); // Phân tách chuỗi URL thành mảng
                            var groupedImages = imageUrls.Select((url, index) => new { url, index }) // Đánh chỉ số
                            .GroupBy(x => x.index / 2)                  // Nhóm 2 ảnh một nhóm
                            .ToList();

                            foreach (var group in groupedImages)
                            {
                                <div class="project-detail-image-inner @(group.Key % 2 != 0 ? "flex-row-reverse" : "")">
                                    @foreach (var image in group)
                                    {
                                        <div>
                                            <img src="@image.url" alt="Project Image" class="w-100 h-100 object-fit-cover" />
                                        </div>
                                    }
                                </div>
                            }
                        }
                        else
                        {
                            <p>Không có hình ảnh nào để hiển thị.</p>
                        }
                    </figure>
                </article>
            </main>
            <div class="discover">
                <div class="section-box">
                    <div class="sub-title">
                        Loại thảm
                    </div>
                    <h3 class="title">không gian & Dòng thảm</h3>
                    <div class="text-underline"></div>
                </div>
                <div class="row">
                    @foreach (var prod in list_product.Take(6).ToList())
                    {
                        <div class="col-4">
                            <figure class="card product-card">
                                <div class="product-image">
                                    <a @onclick="() => NavDetails(prod.Id)" class="w-100">
                                        <div class="img-wrap">
                                            <img src="@prod.Feature_image"
                                                 style="height:548px !important" class="w-100 h-100 object-fit-cover"
                                                 alt="@prod.Title">
                                        </div
                                        <div class="img-wrap-hide">
                                            <img src="@GetFirstImageUrl(prod.Image_library)"
                                                 style="height:548px !important" class="w-100 h-100 object-fit-cover"
                                                 alt="@prod.Title">
                                        </div>
                                    </a>
                                  
                                </div>
                                <figcaption class="product-info">
                                    <a @onclick="() => NavDetails(prod.Id)" class="product-name">@prod.Title</a>
                                    <div class="product-description">
                                        <span class="description">@prod.Post_categories.FirstOrDefault()?.Categories?.Title</span>
                                    </div>
                                    @if (prod.MinPrice.HasValue && prod.MaxPrice.HasValue)
                                    {
                                        <div class="price-wrap">
                                            <span class="price">Giá: @prod.MinPrice - @prod.MaxPrice VND</span>
                                        </div>
                                    }
                                    else
                                    {
                                        <div>Chưa có giá</div>
                                    }
                                  
                                </figcaption>
                            </figure>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    [Parameter]
    public string slug { get; set; }
    private Product_Posts posts = new Product_Posts();
    private List<Product_Posts> list_post = new List<Product_Posts>();
    private List<Product_Posts> list_product = new List<Product_Posts>();
    private Banner banner = new Banner();
    private string abc = "";
    protected async override Task OnInitializedAsync()
    {
        posts = await sev.GetBySlugAndTypePage(slug, "post");
        abc = await sev.GetNameDesigner(posts.AuthorId?? 0);
        banner = await bnser.GetBannerByProductPostId(posts.Id);
        list_post = await sev.GetCountByType("post", posts.Id);
        list_product = await sev.GetAllByClient();
    }

    private string GetFirstImageUrl(string imageUrls)
    {
        if (string.IsNullOrEmpty(imageUrls))
        {
            return string.Empty;
        }

        var urls = imageUrls.Split(',');
        return urls.FirstOrDefault() ?? string.Empty;
    }
    private void NavDetails(long id)
    {
        nav.NavigateTo($"/product-detail/{id}");
    }
 
}